plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'net.minecraftforge.licenser'
    id 'net.minecraftforge.gradleutils' version '2.3.3'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


group = 'net.minecraftforge'
version gradleutils.tagOffsetVersion
println "Version: $version"

repositories {
    gradlePluginPortal()
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.optimizationOptions.indy = true
}

sourceSets {
    functionalTest
}

configurations {
    functionalTestImplementation.extendsFrom(testImplementation)
    functionalTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}
gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.register('functionalTest', Test) {
    description = 'Runs the functional tests.'
    group = 'verification'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath

    mustRunAfter test
}

dependencies {
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
    functionalTestImplementation gradleTestKit()
}

test {
    useJUnit()
}

license {
    matching(includes: ['**/*.java', '**/*.groovy']) {
        header = file('LICENSE')
    }
}

gradlePlugin {
    website = 'https://github.com/MinecraftForge/licenser'
    vcsUrl = 'https://github.com/MinecraftForge/licenser.git'

    plugins {
        licenser {
            id = 'net.minecraftforge.licenser'
            implementationClass = 'net.minecraftforge.licenser.Licenser'
            displayName = 'Forge Licenser'
            description = 'A simple license header manager for Gradle - Fork of org.cadixdev.licenser'
            tags = ['license']
        }
    }
}

jar {
    archiveClassifier = 'thin'
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    enableRelocation true
    archiveClassifier = null
    relocationPrefix = 'net.minecraftforge.licenser.shadow'
    relocate 'org.cadixdev.gradle.licenser', 'net.minecraftforge.licenser'
}

publishing {
    publications.register('pluginMaven', MavenPublication) {
        pom {
            artifactId = 'licenser'
        }
    }

    repositories {
        maven {
            url = 'file://' + file('build/repo').absolutePath
        }
    }
}
